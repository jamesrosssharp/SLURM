# 0 "src/main.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "src/main.c"



extern void load_palette(short* palette, int offset, int len);

extern short mandelbrot_palette;






void set_up_sprites()
{


 short x = ((32 + 24 & 0x3ff) | ((1 & 0x1) << 10) | ((0 & 0xf) << 11) | ((1 & 1) << 15));
 short y = ((16 & 0x3ff) | ((63 & 0x3f) << 10));
 short h = ((33+240 & 0x3ff));
 short a = (0x4000);

 load_sprite_x(0, x);
 load_sprite_y(0, y);
 load_sprite_h(0, h);
 load_sprite_a(0, a);

 x = ((32 + 24 + 64 & 0x3ff) | ((1 & 0x1) << 10) | ((0 & 0xf) << 11) | ((1 & 1) << 15));
 a = (0x4000 + 16);

 load_sprite_x(1, x);
 load_sprite_y(1, y);
 load_sprite_h(1, h);
 load_sprite_a(1, a);

 x = ((32 + 24 + 128 & 0x3ff) | ((1 & 0x1) << 10) | ((0 & 0xf) << 11) | ((1 & 1) << 15));
 a = (0x4000 + 32);

 load_sprite_x(2, x);
 load_sprite_y(2, y);
 load_sprite_h(2, h);
 load_sprite_a(2, a);


 x = ((32 + 24 + 192 & 0x3ff) | ((1 & 0x1) << 10) | ((0 & 0xf) << 11) | ((1 & 1) << 15));
 a = (0x4000 + 48);

 load_sprite_x(3, x);
 load_sprite_y(3, y);
 load_sprite_h(3, h);
 load_sprite_a(3, a);

}

short col = 0x12;
void clear_screen()
{
 int i;
 char* ptr = (char*)0x8000;
 for (i = 0; i < (256*120); i++)
 {
  *ptr++ = col++;
 }
 col ++;
}

extern short mandel_loop(short r, short i);

void render_mandelbrot()
{
 short r1 = -1 * 128 - 64;
 short i1 = -1 * 128;

 short dr = 1;
 short di = 1;

 char* buffer = (char*)(0x8000);
 int i;


 for (i = 0; i < 256; i++)
 {
  int r;
  short rr = r1;

  for (r = 0; r < 128; r++)
  {
   short iter;
   short iter2;
   char byte;


   iter = mandel_loop(rr, i1);


   rr += dr;
   iter2 = mandel_loop(rr, i1);

   byte = iter | (iter2 << 4);
   *buffer++ = byte;

   rr += dr;
  }
  i1 += di;
 }
}

void enable_interrupts()
{
 __out(0x7000, 0x2);
 global_interrupt_enable();
}
short ticks = 0;
void cycle_palette()
{
 short* pal = (short*)&mandelbrot_palette;
 short last = pal[15];
 int i;

 ticks ++;
 if (ticks == 4)
  ticks = 0;
 else
  return;

 for (i = 14; i > 0; i--) {
  trace_hex(pal[i]);
  pal[i+1] = pal[i];
 }
 pal[1] = last;
 load_palette(&mandelbrot_palette, 0, 16);
}

int main()
{


    __out(0x5f02, 1);


 __out(0x5d22, 0x0);

 load_palette(&mandelbrot_palette, 0, 16);

 set_up_sprites();


 render_mandelbrot();
 enable_interrupts();

 while (1)
 {
  cycle_palette();

  __sleep();
 }
 putc('!');
 exit();
 return 0;
}
