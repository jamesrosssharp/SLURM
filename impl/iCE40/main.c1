# 0 "main.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "main.c"

char* str = "Hello world!\n";



void puts(char* str)
{
 char c;
 while(c = *str++)
  putc(c);
}

short copperList[] = {
  0x6000,
  0x6f00,
  0x7007,
  0x60f0,
  0x7007,
  0x600f,
  0x7007,
  0x60ff,
  0x7007,
  0x4200,
  0x1001,
  0x2fff
};

extern void load_copper_list(short* list, int len);

struct Sprite {
 short enabled;
 short i;
 short x;
 short y;
 short width;
 short height;
 short vx;
 short vy;
 short frame;
 short orientation;
 short frames_in_cycle;
 unsigned short frames_up[4];
 unsigned short frames_down[4];
 unsigned short frames_left[4];
 unsigned short frames_right[4];
 unsigned short frames_die_spawn[13];
 unsigned short frames_scatter[4];
 unsigned short frames_dead[2];
};






struct Ghost {
 struct Sprite sp;
 short state;
 short idle_count;
 short scatter_x;
 short scatter_y;
};

extern short pacman_sprite_sheet;
extern short pacman_spritesheet_palette;
extern short pacman_tilemap;
extern short pacman_tileset;
extern short pacman_tileset_palette;
# 77 "main.c"
struct Sprite pocman_start = {
  1,
  1,
  320 ,
  256,
  16,
  16,
  0,
  0,
  0,
  1,
  26,
  {64*2*16, 64*2*16+4, 8, 64*2*16+4},
  {64*3*16, 64*3*16+4, 8, 64*3*16+4},
  {64*1*16, 64*1*16+4, 8, 64*1*16+4},
  {0, 4, 8, 4},
  {8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56},
  {0},
  {0}
 };






extern void load_sprite_x(short sprite, short x);
extern void load_sprite_y(short sprite, short y);
extern void load_sprite_h(short sprite, short h);
extern void load_sprite_a(short sprite, short a);

extern short pacman_sprite_sheet;
extern short pacman_spritesheet_palette;
extern short pacman_tilemap;
extern short pacman_tileset;
extern short pacman_tileset_palette;



void update_sprite(struct Sprite* sp)
{
 short x, y, h, a;
    unsigned short frame;


 x = ((sp->x & 0x3ff) | ((sp->enabled & 0x1) << 10) | ((0 & 0xf) << 11) | ((1 & 1) << 15));
 y = ((sp->y & 0x3ff) | ((sp->width & 0x3f) << 10));
 h = ((sp->y + sp->height & 0x3ff));
 frame = sp->frame;
 frame = (sp->frame) & 15;

 switch(sp->orientation)
 {
  case 1:
   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_up[frame >> 2]));
   break;
  case 2:
   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_down[frame >> 2]));
   break;
  case 4:
   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_left[frame >> 2]));
   break;
  case 8:
   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_right[frame >> 2]));
   break;
  case 32:
   if (sp -> frame > 26) sp->frame = 26;
   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_die_spawn[sp->frame>>1]));
   break;
  case 16:
   if (sp -> frame > 26) sp->frame = 26;

   a = (((unsigned short)&pacman_sprite_sheet >> 1) + (sp->frames_left[2]));
   break;
 }

 load_sprite_x(sp->i, x);
 load_sprite_y(sp->i, y);
 load_sprite_h(sp->i, h);
 load_sprite_a(sp->i, a);

 if (sp->frames_in_cycle)
 {
  sp->x += sp->vx;
  sp->y += sp->vy;
  sp->frames_in_cycle--;

  if (sp->x > 320 + 60)
   sp->x = 8;
  if (sp->x < 8)
   sp->x = 320 + 60;

  sp->frame ++;

 }
 else
 {
  sp->vx = 0;
  sp->vy = 0;
  sp->frame = 0;
 }
}

void enable_interrupts()
{
 __out(0x7000, 0x2);
 global_interrupt_enable();
}

short bg_x = 0;
short bg_y = 0;
short vx = 0;
short vy = 0;

void update_background()
{

 __out(0x5f02, 1);



 __out(0x5d00, 0x1 | (1<<4) | (2<<8) | (1<<15));



 __out(0x5d01, bg_x);



 __out(0x5d02, bg_y);



 __out(0x5d03, (unsigned short)&pacman_tilemap >> 1);



 __out(0x5d04, (unsigned short)&pacman_tileset >> 1);

}


short frame = 0;

int main()
{


 puts(str);

 load_copper_list(copperList, ((sizeof(copperList)) / (sizeof(copperList[0]))));
 __out(0x5d20, 1);

 load_palette(&pacman_spritesheet_palette, 0, 16);
 load_palette(&pacman_tileset_palette, 16, 16);


 __out(0x5000, 320 | 1<<10 | 1<<15);
 __out(0x5100, 15<<10 | 240);
 __out(0x5200, 256);
 __out(0x5300, 0x4000);

 enable_interrupts();

 while(1)
 {
  frame = __in(0x5f00);
  copperList[0] = 0x7000 | (frame++ & 31);
  load_copper_list(copperList, ((sizeof(copperList)) / (sizeof(copperList[0]))));
  update_background();
  __sleep();
 }
}
